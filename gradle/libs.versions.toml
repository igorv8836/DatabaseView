[versions]
accompanistSwiperefresh = "0.23.0"
kotlin = "2.0.21"
compose-plugin = "1.7.0"
compose-hot-reload = "1.0.0-dev.28"
foojay = "0.8.0"

kotlinxDatetime = "0.6.1"
kotlinxSerializationJson = "1.7.3"
coroutines = "1.9.0"

navigationCompose = "2.8.0-alpha10"
coil = "2.7.0"

orbit = "9.0.0"
lifecycle = "2.8.7"

koin = "4.0.0"

napier = "2.7.1"

ktor = "3.0.0"

datastore = "1.1.1"
atomicfu = "0.25.0"
conventional-commits = "3.1.3"

postgresVersion = "42.7.2"
exposedVersion = "0.41.1"
runtimeDesktop = "1.7.0"

[libraries]
accompanist-swiperefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "accompanistSwiperefresh" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "coroutines" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-composeVM = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }

androidx-runtime-desktop = { group = "androidx.compose.runtime", name = "runtime-desktop", version.ref = "runtimeDesktop" }
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
orbit-core = { module = "org.orbit-mvi:orbit-core", version.ref = "orbit" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycle" }
coil = { group = "io.coil-kt", name = "coil", version.ref = "coil" }
coil-compose = { group = "io.coil-kt", name = "coil-compose", version.ref = "coil" }

ktor-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-engine-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-engine-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-engine-java = { group = "io.ktor", name = "ktor-client-java", version.ref = "ktor" }
ktor-websockets = { group = "io.ktor", name = "ktor-client-websockets", version.ref = "ktor" }
ktor-auth = { group = "io.ktor", name = "ktor-client-auth", version.ref = "ktor" }
ktor-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-serialization = { group = "io.ktor", name = "ktor-client-serialization", version.ref = "ktor" }
ktor-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

datastore = { group = "androidx.datastore", name = "datastore", version.ref = "datastore" }
datastore-preferences = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "datastore" }

atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }

napier = { module = "io.github.aakira:napier", version.ref = "napier" }

exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposedVersion" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposedVersion" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposedVersion" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposedVersion" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresVersion" }

[plugins]
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
compose-hot-reload = { id = "org.jetbrains.compose-hot-reload", version.ref = "compose-hot-reload" }
foojay-resolver-convention = { id = "org.gradle.toolchains.foojay-resolver-convention", version.ref = "foojay" }

conventional-commits = { id = "it.nicolasfarabegoli.conventional-commits", version.ref = "conventional-commits" }